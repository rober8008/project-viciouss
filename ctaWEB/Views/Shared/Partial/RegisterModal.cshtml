@model ctaWEB.Models.RegisterModel

@{
    Layout = null;
}

<!DOCTYPE html>

<!-- Modal -->
<div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document" style="width:362px">
        <div class="modal-content">
            <form id="register_form" class="form-signin wow fadeInUp" action="@Url.Action("DoModalRegister", "User")" method="post">
                <h2 class="form-signin-heading">@ctaWEB.App_GlobalResources.Modals.Register_Now</h2>
                @Html.AntiForgeryToken()
                <div class="login-wrap" id="loggin_box">
                    <p>@ctaWEB.App_GlobalResources.Modals.Enter_Personal_Details</p>

                    <div class="form-group" id="register_email_group">
                        @Html.ValidationMessageFor(Model => Model.email, null, new { @class = "text-danger" })
                        @Html.TextBoxFor(Model => Model.email, new { @class = "form-control", placeholder = @ctaWEB.App_GlobalResources.Modals.Email })
                    </div>

                    <p>@ctaWEB.App_GlobalResources.Modals.Enter_Account_Details</p>
                    <div class="" id="register_username_group">
                        @Html.ValidationMessageFor(Model => Model.username, null, new { @class = "text-danger" })
                        @Html.TextBoxFor(Model => Model.username, new { @class = "form-control", placeholder = @ctaWEB.App_GlobalResources.Modals.User_Name })
                    </div>
                    <div class="" id="password_group">
                        @Html.ValidationMessageFor(Model => Model.password, null, new { @class = "text-danger" })
                        @Html.PasswordFor(Model => Model.password, new { @class = "form-control", placeholder = @ctaWEB.App_GlobalResources.Modals.Password })
                    </div>
                    <div class="" id="repeat_password_group">
                        @Html.ValidationMessageFor(Model => Model.repeat_password, null, new { @class = "text-danger" })
                        @Html.PasswordFor(Model => Model.repeat_password, new { @class = "form-control", placeholder = @ctaWEB.App_GlobalResources.Modals.Retype_Password })
                    </div>

                    <label class="checkbox">
                        <input type="checkbox" value="agree this condition">
                        <a href="http://viciouss.com/news/wp-content/uploads/2018/09/TC-Viciouss.com_.pdf" target="_blank">
                        @ctaWEB.App_GlobalResources.Modals.Agree_Terms
                        </a>
                    </label>

                    <div class="g-recaptcha" data-sitekey="6LeWK3EUAAAAAJULEl1ZNyKEHLiJG1_HTsjWu6vn" style="transform:scale(0.95);-webkit-transform:scale(0.95);transform-origin:0 0;-webkit-transform-origin:0 0"></div>
                    <span id="valCaptRegister" class="text-danger"></span>
                    <div id="error_group" class="help-block alert alert-danger" style="display: none;"></div>

                    <div style="display:inline-block">
                        <button class="btn btn-lg btn-login" type="submit" id="submit_register" data-loading-text="Enviando..." style=" width:139px;margin-right:10px">@ctaWEB.App_GlobalResources.Modals.Submit</button>
                        <button class="btn btn-lg btn-login" type="submit" id="close_register" style="width:138px" data-dismiss="modal">@ctaWEB.App_GlobalResources.Modals.Close</button>
                    </div>

                    <div class="registration">
                        @ctaWEB.App_GlobalResources.Modals.Already_Registered
                        <a style="cursor:pointer;" data-toggle="modal" data-dismiss="modal" data-target="#logginModal">
                            @ctaWEB.App_GlobalResources.Modals.Login
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    //$(document).ready(function () {
    //    $('#registerModal').on('shown.bs.modal', function () {
    //        $('#myInput').focus()
    //    })
    //});

    $('#register_form').submit(function (event) {
        if ($("#register_form .g-recaptcha-response").val() === null || $("#register_form .g-recaptcha-response").val() === "") {
            $("#valCaptRegister").html("Debes chequear casilla de verificación");
            return false;
        }
        $("#valCaptRegister").html('');
        $('#error_group').hide();



        $form = $(this);

        // get the form data
        // there are many ways to get this data using jQuery (you can use the class or id also)
        var formData = {
            'email': $('input[name=email]').val(),
            'username': $('input[name=username]').val(),
            'password': $('input[name=password]').val(),
            'repeat_password': $('input[name=repeat_password]').val()
        };

        // process the form
        $.ajax({
            type: $form.attr('method'), // define the type of HTTP verb we want to use (POST for our form)
            url: $form.attr('action'), // the url where we want to POST
            data: formData, // our data object
            dataType: 'json', // what type of data do we expect back from the server
            encode: true,
            beforeSend: function (data) {
                $('#submit_register').button('loading');
            }
        })
            .done(function (data) {
                //// here we will handle errors and validation messages
                if (!data.success) {

                    $('#submit_register').button('reset');

                    if (data.error) {
                        //$('#register_username_group').addClass('has-error'); // add the error class to show red input
                        //$('#register_password_group').addClass('has-error');
                        $('#error_group').html(data.message).show();
                        //$('#register_error_group').append('<div class="help-block alert alert-danger">' + data.message + '</div>'); // add the actual error message under our input
                    }
                }
                else {
                    window.location = data.url;
                }
            })
            .fail(function (data) {
                $('#submit_register').button('reset');

                // show any errors
                // best to remove for production
                console.log(data);
            });
        // stop the form from submitting the normal way and refreshing the page
        event.preventDefault();
    });

</script>
